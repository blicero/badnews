# -*- mode: org; fill-column: 78; -*-
# Time-stamp: <2024-10-24 22:46:34 krylon>
#
#+TAGS: internals(i) ui(u) bug(b) feature(f)
#+TAGS: database(d) design(e), meditation(m)
#+TAGS: optimize(o) refactor(r) cleanup(c)
#+TAGS: web(w)
#+TODO: TODO(t)  RESEARCH(r) IMPLEMENT(i) TEST(e) | DONE(d) FAILED(f) CANCELLED(c)
#+TODO: MEDITATE(m) PLANNING(p) | SUSPENDED(s)
#+PRIORITIES: A G D

* BadNews
  BadNews is an RSS reader
** Clock table
   #+BEGIN: clocktable :scope file :maxlevel 202 :emphasize t
   #+CAPTION: Clock summary at [2024-10-24 Do 22:46]
   | Headline                                             | Time      |            |          |          |       |      |
   |------------------------------------------------------+-----------+------------+----------+----------+-------+------|
   | *Total time*                                         | *3d 5:31* |            |          |          |       |      |
   |------------------------------------------------------+-----------+------------+----------+----------+-------+------|
   | *BadNews*                                            | *3d 5:31* |            |          |          |       |      |
   | \_  /Features [7/8]/                                 |           | /1d 19:51/ |          |          |       |      |
   | \_    Rating and Tagging [7/8]                       |           |            | 1d 19:51 |          |       |      |
   | \_      Rating [1/1]                                 |           |            |          |     6:30 |       |      |
   | \_        Caching results                            |           |            |          |          |  0:27 |      |
   | \_      Tags [5/6]                                   |           |            |          | 1d 13:20 |       |      |
   | \_        Recommend tags for Items                   |           |            |          |          |  4:28 |      |
   | \_        Add newly created tags to tag_view         |           |            |          |          |  1:20 |      |
   | \_        Order tags by hierarchy                    |           |            |          |          |  1:10 |      |
   | \_        Link Tags to Items [2/2]                   |           |            |          |          | 13:11 |      |
   | \_          Unlink Tags from Items                   |           |            |          |          |       | 1:13 |
   | \_          Fetch linked tags per item in handler... |           |            |          |          |       | 0:23 |
   | \_  /Components [4/4]/                               |           | /1d 9:40/  |          |          |       |      |
   | \_    Data model [0/0]                               |           |            |     0:27 |          |       |      |
   | \_    Database [1/1]                                 |           |            |    12:17 |          |       |      |
   | \_      Testing [0/0]                                |           |            |          |     3:02 |       |      |
   | \_      Queries respect transaction                  |           |            |          |     0:03 |       |      |
   | \_    Feed catcher / parser [0/0]                    |           |            |     5:41 |          |       |      |
   | \_      Testing                                      |           |            |          |     2:16 |       |      |
   | \_    Web Interface [4/4]                            |           |            |    13:56 |          |       |      |
   | \_      Appearances matter [4/4]                     |           |            |          |     4:24 |       |      |
   | \_        Feed Details                               |           |            |          |          |  0:41 |      |
   | \_        Images                                     |           |            |          |          |  0:12 |      |
   | \_        Hide long descriptions                     |           |            |          |          |  0:20 |      |
   | \_        Fix Links                                  |           |            |          |          |  0:03 |      |
   | \_      AJAX FTW [0/0]                               |           |            |          |     3:02 |       |      |
   | \_    Tag Advisor [0/0]                              |           |            |     1:19 |          |       |      |
   #+END:
** Journal
** Features [7/8]
   :PROPERTIES:
   :COOKIE_DATA: todo recursive
   :VISIBILITY: children
   :END:
*** Rating and Tagging [7/8]
    :PROPERTIES:
    :COOKIE_DATA: todo recursive
    :VISIBILITY: children
    :END:
    :LOGBOOK:
    CLOCK: [2024-10-02 Mi 21:09]--[2024-10-02 Mi 21:10] =>  0:01
    :END:
    I want to take the opportunity to rethink the way I did the tagging and
    rating in the old ticker app.
**** DONE Rating [1/1]
     CLOSED: [2024-10-20 So 17:07]
     :PROPERTIES:
     :COOKIE_DATA: todo recursive
     :VISIBILITY: children
     :END:
     :LOGBOOK:
     CLOCK: [2024-10-07 Mo 12:33]--[2024-10-07 Mo 16:09] =>  3:36
     CLOCK: [2024-10-04 Fr 17:37]--[2024-10-04 Fr 20:04] =>  2:27
     :END:
     On the database side, I already did some preparations.

     [2024-10-04 Fr 20:09]
     Okay, I can rate and un-rate items now, now I need a kind of Bayesian net
     to guess how interesting or boring the other items are.
***** DONE Caching results
      CLOSED: [2024-10-07 Mo 16:09]
      :LOGBOOK:
      CLOCK: [2024-10-07 Mo 12:06]--[2024-10-07 Mo 12:33] =>  0:27
      :END:
      I want to cache results computed by the Judge, but I am unsure how I
      want to do that. I could just use the database - it's already there,
      isn't it? -, but I could use something else, too, so I don't create an
      accidental bottleneck. LevelDB for example, which claims to be pretty
      fast.
**** Tags [5/6]
     :PROPERTIES:
     :COOKIE_DATA: todo recursive
     :VISIBILITY: children
     :END:
     :LOGBOOK:
     CLOCK: [2024-10-14 Mo 14:30]--[2024-10-14 Mo 16:05] =>  1:35
     CLOCK: [2024-10-13 So 18:47]--[2024-10-13 So 20:15] =>  1:28
     CLOCK: [2024-10-13 So 14:40]--[2024-10-13 So 18:36] =>  3:56
     CLOCK: [2024-10-12 Sa 15:52]--[2024-10-12 Sa 18:10] =>  2:18
     CLOCK: [2024-10-11 Fr 21:30]--[2024-10-11 Fr 22:45] =>  1:15
     CLOCK: [2024-10-11 Fr 18:25]--[2024-10-11 Fr 18:51] =>  0:26
     CLOCK: [2024-10-09 Mi 15:34]--[2024-10-09 Mi 19:45] =>  4:11
     CLOCK: [2024-10-08 Di 18:14]--[2024-10-08 Di 19:41] =>  1:27
     CLOCK: [2024-10-08 Di 14:56]--[2024-10-08 Di 15:31] =>  0:35
     :END:
***** TODO Recommend tags for Items
      :LOGBOOK:
      CLOCK: [2024-10-24 Do 19:44]--[2024-10-24 Do 22:46] =>  3:02
      CLOCK: [2024-10-23 Mi 13:24]--[2024-10-23 Mi 14:50] =>  1:26
      :END:
      I had this feature on my previous ticker application, but I suspect it
      is very, very slow. On this retry, I'd like have acceptable performance,
      even if the app is running on a lowly Raspberry Pi Model 2.
***** DONE Add newly created tags to tag_view
      CLOSED: [2024-10-17 Do 16:47]
      :LOGBOOK:
      CLOCK: [2024-10-17 Do 15:27]--[2024-10-17 Do 16:47] =>  1:20
      :END:
***** DONE Order tags by hierarchy
      CLOSED: [2024-10-21 Mo 17:41]
      :LOGBOOK:
      CLOCK: [2024-10-21 Mo 16:31]--[2024-10-21 Mo 17:41] =>  1:10
      :END:
***** DONE Link Tags to Items [2/2]
      CLOSED: [2024-10-21 Mo 17:41]
      :PROPERTIES:
      :COOKIE_DATA: todo recursive
      :VISIBILITY: children
      :END:
      :LOGBOOK:
      CLOCK: [2024-10-19 Sa 17:34]--[2024-10-19 Sa 20:35] =>  3:01
      CLOCK: [2024-10-18 Fr 18:18]--[2024-10-18 Fr 23:19] =>  5:01
      CLOCK: [2024-10-17 Do 21:57]--[2024-10-17 Do 23:30] =>  1:33
      CLOCK: [2024-10-17 Do 17:52]--[2024-10-17 Do 19:52] =>  2:00
      :END:
****** DONE Unlink Tags from Items
       CLOSED: [2024-10-20 So 18:22]
       :LOGBOOK:
       CLOCK: [2024-10-20 So 17:09]--[2024-10-20 So 18:22] =>  1:13
       :END:
****** DONE Fetch linked tags per item in handler for item_view         :web:
      CLOSED: [2024-10-19 Sa 21:59]
      :LOGBOOK:
      CLOCK: [2024-10-19 Sa 20:37]--[2024-10-19 Sa 21:00] =>  0:23
      :END:
** Components [4/4]
   :PROPERTIES:
   :COOKIE_DATA: todo recursive
   :VISIBILITY: children
   :END:
*** Data model [0/0]
    :PROPERTIES:
    :COOKIE_DATA: todo recursive
    :VISIBILITY: children
    :END:
    :LOGBOOK:
    CLOCK: [2024-09-19 Do 16:25]--[2024-09-19 Do 16:52] =>  0:27
    :END:
*** Database [1/1]                                                 :database:
    :PROPERTIES:
    :COOKIE_DATA: todo recursive
    :VISIBILITY: children
    :END:
    :LOGBOOK:
    CLOCK: [2024-10-15 Di 16:21]--[2024-10-15 Di 17:06] =>  0:45
    CLOCK: [2024-10-01 Di 18:27]--[2024-10-01 Di 18:35] =>  0:08
    CLOCK: [2024-09-24 Di 14:42]--[2024-09-24 Di 14:44] =>  0:02
    CLOCK: [2024-09-23 Mo 20:45]--[2024-09-23 Mo 21:37] =>  0:52
    CLOCK: [2024-09-21 Sa 20:35]--[2024-09-21 Sa 20:42] =>  0:07
    CLOCK: [2024-09-21 Sa 15:52]--[2024-09-21 Sa 16:00] =>  0:08
    CLOCK: [2024-09-21 Sa 13:52]--[2024-09-21 Sa 15:41] =>  1:49
    CLOCK: [2024-09-20 Fr 21:10]--[2024-09-20 Fr 21:46] =>  0:36
    CLOCK: [2024-09-20 Fr 10:19]--[2024-09-20 Fr 10:55] =>  0:36
    CLOCK: [2024-09-19 Do 16:52]--[2024-09-19 Do 21:01] =>  4:09
    :END:
**** Testing [0/0]
     :LOGBOOK:
     CLOCK: [2024-10-13 So 18:36]--[2024-10-13 So 18:47] =>  0:11
     CLOCK: [2024-10-12 Sa 18:10]--[2024-10-12 Sa 21:01] =>  2:51
     :END:
**** DONE [#A] Queries respect transaction                              :bug:
     CLOSED: [2024-09-24 Di 19:08]
     :LOGBOOK:
     CLOCK: [2024-09-24 Di 19:05]--[2024-09-24 Di 19:08] =>  0:03
     :END:
     All database methods that query the database but do not change it, need
     to check if the database has an ongoing transaction and if so, need to
     use =stmt = db.tx.Stmt(stmt)=.
     [2024-09-24 Di 19:06] Turns out, I /already/ do that. Which is both a bit
     embarassing (insofar I did not remember) and a relief (insofar I
     obviously did think of this before).
*** Feed catcher / parser [0/0]
    :PROPERTIES:
    :COOKIE_DATA: todo recursive
    :VISIBILITY: children
    :END:
    :LOGBOOK:
    CLOCK: [2024-09-24 Di 19:08]--[2024-09-24 Di 20:06] =>  0:58
    CLOCK: [2024-09-24 Di 17:18]--[2024-09-24 Di 19:05] =>  1:47
    CLOCK: [2024-09-24 Di 14:45]--[2024-09-24 Di 15:25] =>  0:40
    :END:
**** Testing
     :LOGBOOK:
     CLOCK: [2024-09-26 Do 17:56]--[2024-09-26 Do 20:12] =>  2:16
     :END:
*** Web Interface [4/4]
    :PROPERTIES:
    :COOKIE_DATA: todo recursive
    :VISIBILITY: children
    :END:
    :LOGBOOK:
    CLOCK: [2024-10-08 Di 14:48]--[2024-10-08 Di 14:53] =>  0:05
    CLOCK: [2024-09-30 Mo 18:27]--[2024-09-30 Mo 23:50] =>  5:23
    CLOCK: [2024-09-30 Mo 17:50]--[2024-09-30 Mo 18:21] =>  0:31
    CLOCK: [2024-09-30 Mo 13:35]--[2024-09-30 Mo 13:46] =>  0:11
    CLOCK: [2024-09-29 So 16:10]--[2024-09-29 So 16:30] =>  0:20
    :END:
    For an RSS reader, a web interface is the obvious approach, isn't it?
**** Appearances matter [4/4]
     :PROPERTIES:
     :COOKIE_DATA: todo recursive
     :VISIBILITY: children
     :END:
     :LOGBOOK:
     CLOCK: [2024-10-01 Di 19:39]--[2024-10-01 Di 22:47] =>  3:08
     :END:
***** DONE Feed Details
     CLOSED: [2024-10-11 Fr 15:30]
     :LOGBOOK:
     CLOCK: [2024-10-11 Fr 14:49]--[2024-10-11 Fr 15:30] =>  0:41
     :END:
     
***** DONE Images
      CLOSED: [2024-10-02 Mi 18:14]
      :LOGBOOK:
      CLOCK: [2024-10-02 Mi 18:02]--[2024-10-02 Mi 18:14] =>  0:12
      :END:
      This is something I tackled but didn't get right with the old app, I
      /want/ to have images referenced in the RSS descriptions displayed, but
      I want them to be modestly sized.
***** DONE Hide long descriptions
      CLOSED: [2024-10-02 Mi 18:35]
      :LOGBOOK:
      CLOCK: [2024-10-02 Mi 18:15]--[2024-10-02 Mi 18:35] =>  0:20
      :END:
      In the old ticker app, I would hide lengthy article descriptions behind
      a button that would reveal the entire text + images. I should just copy
      that verbatim.
***** DONE Fix Links
      CLOSED: [2024-10-02 Mi 18:38]
      :LOGBOOK:
      CLOCK: [2024-10-02 Mi 18:35]--[2024-10-02 Mi 18:38] =>  0:03
      :END:
      I want to make sure any links within item descriptions are opened in new
      tabs or windows.
**** AJAX FTW [0/0]
     :PROPERTIES:
     :COOKIE_DATA: todo recursive
     :VISIBILITY: children
     :END:
     :LOGBOOK:
     CLOCK: [2024-10-01 Di 18:55]--[2024-10-01 Di 19:29] =>  0:34
     CLOCK: [2024-10-01 Di 18:35]--[2024-10-01 Di 18:51] =>  0:16
     CLOCK: [2024-10-01 Di 17:25]--[2024-10-01 Di 18:27] =>  1:02
     CLOCK: [2024-10-01 Di 14:15]--[2024-10-01 Di 15:25] =>  1:10
     :END:
     In my current news reader, loading the items views takes about forever,
     and one main goal of the rewrite is to make it at least feel more
     responsive. So I am going to try and load as much of the content as
     possible via Ajax.
*** Tag Advisor [0/0]
    :PROPERTIES:
    :COOKIE_DATA: todo recursive
    :VISIBILITY: children
    :END:
    :LOGBOOK:
    CLOCK: [2024-10-22 Di 17:09]--[2024-10-22 Di 17:23] =>  0:14
    CLOCK: [2024-10-22 Di 14:35]--[2024-10-22 Di 15:40] =>  1:05
    :END:
** Bugs [0/0]
   :PROPERTIES:
   :COOKIE_DATA: todo recursive
   :VISIBILITY: children
   :END:


